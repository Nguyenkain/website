<?php

/**
 * This is the model base class for the table "author".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Author".
 *
 * Columns in table "author" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $ID
 * @property string $Name
 * @property string $DOB
 * @property string $Address
 * @property string $Telephone
 * @property string $Email
 * @property string $Web
 * @property string $Description
 *
 */
abstract class BaseAuthor extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'author';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Author|Authors', $n);
	}

	public static function representingColumn() {
		return 'Name';
	}

	public function rules() {
		return array(
			array('Name, Email, Web', 'length', 'max'=>50),
			array('Address', 'length', 'max'=>255),
			array('Telephone', 'length', 'max'=>10),
			array('DOB, Description', 'safe'),
			array('Name, DOB, Address, Telephone, Email, Web, Description', 'default', 'setOnEmpty' => true, 'value' => null),
			array('ID, Name, DOB, Address, Telephone, Email, Web, Description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'ID' => Yii::t('app', 'ID'),
			'Name' => Yii::t('app', 'Name'),
			'DOB' => Yii::t('app', 'Dob'),
			'Address' => Yii::t('app', 'Address'),
			'Telephone' => Yii::t('app', 'Telephone'),
			'Email' => Yii::t('app', 'Email'),
			'Web' => Yii::t('app', 'Web'),
			'Description' => Yii::t('app', 'Description'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('ID', $this->ID);
		$criteria->compare('Name', $this->Name, true);
		$criteria->compare('DOB', $this->DOB, true);
		$criteria->compare('Address', $this->Address, true);
		$criteria->compare('Telephone', $this->Telephone, true);
		$criteria->compare('Email', $this->Email, true);
		$criteria->compare('Web', $this->Web, true);
		$criteria->compare('Description', $this->Description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}